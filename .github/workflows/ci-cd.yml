name: CI/CD with Gradle

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [ 14, 16, 18 ]

    environment: prod

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: "temurin"

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          
      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
        working-directory: front/lions
      
      - name: Build
        run: npm run build
        working-directory: front/lions
        
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build
        working-directory: server/lions

      - name: Test with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew test
        working-directory: server/lions

      - name: Server Docker build & push to docker repo
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/simple-spring-boot-app:1.0 .
          docker push ${{ secrets.DOCKER_REPO }}/simple-spring-boot-app:1.0
        working-directory: server/lions

      - name: front Docker build & push to docker repo
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/simple-react-app:1.0 .
          docker push ${{ secrets.DOCKER_REPO }}/simple-react-app:1.0
        working-directory: front/lions

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_REPO }}/simple-spring-boot-app:1.0
            docker pull ${{ secrets.DOCKER_REPO }}/simple-react-app:1.0
            docker service update babylion_was --image ${{ secrets.DOCKER_REPO }}/simple-spring-boot-app:1.0
            docker service update babylion_front --image ${{ secrets.DOCKER_REPO }}/simple-react-app:1.0
            docker image prune -f

