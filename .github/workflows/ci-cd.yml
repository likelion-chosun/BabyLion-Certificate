name: Server CI/CD with Gradle

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    environment: prod

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: "temurin"
          
      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make properties
        run: |
          cd server/lions/src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES }}" > ./application.properties
        shell: bash

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build
        working-directory: server/lions

      - name: Test with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew test
        working-directory: server/lions

      - name: Docker build & push to docker repo
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/simple-spring-boot-app:1.0 .
          docker push ${{ secrets.DOCKER_REPO }}/simple-spring-boot-app:1.0
        working-directory: server/lions

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            docker rm -f $(docker ps -qa)
            docker pull ${{ secrets.DOCKER_REPO }}/simple-spring-boot-app:1.0
            docker run -d --name simple-spring-boot-app -p 8080:8080 ${{ secrets.DOCKER_REPO }}/simple-spring-boot-app:1.0
            docker image prune -f
        env:
          KAKAO_ID: ${{ secrets.KAKAO_ID }}
          KAKAO_SECRET_ID: ${{ secrets.KAKAO_SECRET_ID }}
          LOGIN_REDIRECT_URI: ${{ secrets.LOGIN_REDIRECT_URI }}
          NAVER_ID: ${{ secrets.NAVER_ID }}
          NAVER_SECRET_ID: ${{ secrets.NAVER_SECRET_ID }}
          NAVER_REDIRECT_URI: ${{ secrets.NAVER_REDIRECT_URI }}
          OPEN_AI_KEY: ${{ secrets.OPEN_AI_KEY }}
